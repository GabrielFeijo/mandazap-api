// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  email      String   @unique
  name       String
  password   String?
  provider   String   @default("local")
  providerId String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  instances WhatsAppInstance[]

  @@map("users")
}

model WhatsAppInstance {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  phoneNumber String?
  status      String   @default("disconnected")
  qrCode      String?
  userId      String   @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user          User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  messages      Message[]
  contacts      Contact[]
  medias        Media[]
  auth_sessions AuthSession[]

  @@map("whatsapp_instances")
}

model Contact {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  jid        String
  name       String?
  number     String
  profilePic String?
  instanceId String   @db.ObjectId
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  instance WhatsAppInstance @relation(fields: [instanceId], references: [id], onDelete: Cascade)
  messages Message[]

  @@unique([jid, instanceId])
  @@map("contacts")
}

model Message {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  messageId  String
  fromMe     Boolean
  text       String?
  type       String
  timestamp  DateTime
  status     String?
  contactId  String   @db.ObjectId
  instanceId String   @db.ObjectId
  mediaId    String?  @db.ObjectId
  createdAt  DateTime @default(now())

  contact  Contact          @relation(fields: [contactId], references: [id], onDelete: Cascade)
  instance WhatsAppInstance @relation(fields: [instanceId], references: [id], onDelete: Cascade)
  media    Media?           @relation(fields: [mediaId], references: [id])

  @@unique([messageId, instanceId])
  @@map("messages")
}

model Media {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  filename   String
  mimetype   String
  size       Int
  path       String
  instanceId String   @db.ObjectId
  createdAt  DateTime @default(now())

  instance WhatsAppInstance @relation(fields: [instanceId], references: [id], onDelete: Cascade)
  messages Message[]

  @@map("medias")
}

model AuthSession {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  instanceId String   @db.ObjectId
  keyId      String
  keyData    String // JSON stringified data
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  instance WhatsAppInstance @relation(fields: [instanceId], references: [id], onDelete: Cascade)

  @@unique([instanceId, keyId])
  @@map("auth_sessions")
}
